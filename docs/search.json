[{"path":"https://uconn-scs.github.io/metastat/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Shiying Xiao. Author, maintainer. Timothy Moore. Author.","code":""},{"path":"https://uconn-scs.github.io/metastat/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Xiao S, Moore T (2024). metastat: Analysis Visualization Metabolomics Data. R package version 0.1.0.","code":"@Manual{,   title = {metastat: Analysis and Visualization of Metabolomics Data},   author = {Shiying Xiao and Timothy Moore},   year = {2024},   note = {R package version 0.1.0}, }"},{"path":[]},{"path":"https://uconn-scs.github.io/metastat/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"metastat","text":"can install development version metastat GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"uconn-scs/metastat\")"},{"path":"https://uconn-scs.github.io/metastat/reference/center.html","id":null,"dir":"Reference","previous_headings":"","what":"Centering — center","title":"Centering — center","text":"Apply centering data.","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/center.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Centering — center","text":"","code":"center(dataSet, names = c(\"gender\", \"treatment\", \"replicate\"))"},{"path":"https://uconn-scs.github.io/metastat/reference/center.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Centering — center","text":"dataSet data frame containing data signals. names vector strings (default = c(\"gender\", \"treatment\", \"replicate\")) specifying names attribute columns.","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/center.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Centering — center","text":"centered data.","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/center.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Centering — center","text":"function executes following: Plots mean-variance relationship. Centers data. Plots mean-variance relationship comparison.","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/filterNA.html","id":null,"dir":"Reference","previous_headings":"","what":"Filtering NA's post-imputation — filterNA","title":"Filtering NA's post-imputation — filterNA","text":"Remove compounds NA values.","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/filterNA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filtering NA's post-imputation — filterNA","text":"","code":"filterNA(dataSet, saveRm = TRUE)"},{"path":"https://uconn-scs.github.io/metastat/reference/filterNA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filtering NA's post-imputation — filterNA","text":"dataSet data frame containing data signals. saveRm boolean (default = TRUE) specifying whether save removed data current working directory.","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/filterNA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filtering NA's post-imputation — filterNA","text":"filtered data.","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/filterNA.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filtering NA's post-imputation — filterNA","text":"compounds meet imputation requirement removed, .csv file created removed data.","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/filterOutIn.html","id":null,"dir":"Reference","previous_headings":"","what":"Filtering compounds — filterOutIn","title":"Filtering compounds — filterOutIn","text":"Apply series filtering steps data set.","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/filterOutIn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filtering compounds — filterOutIn","text":"","code":"filterOutIn(   dataSet,   listName = c(),   regexName = c(),   removeList = TRUE,   saveRm = TRUE )"},{"path":"https://uconn-scs.github.io/metastat/reference/filterOutIn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filtering compounds — filterOutIn","text":"dataSet data frame containing data signals. listName character vector compounds select remove. regexName character vector specifying compounds regular expression pattern matching select remove. removeList boolean (default = TRUE) specifying whether list compounds removed selected. TRUE: Remove list compounds data. FALSE: Remove compounds list data. saveRm boolean (default = TRUE) specifying whether save removed data current working directory. option works removeList = TRUE.","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/filterOutIn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filtering compounds — filterOutIn","text":"filtered data.","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/filterOutIn.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filtering compounds — filterOutIn","text":"listName regexName provided, compound names selected removed union specified listName matching regex pattern regexName.","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/impute.knn.html","id":null,"dir":"Reference","previous_headings":"","what":"Imputation by the k-nearest neighbors algorithm — impute.knn","title":"Imputation by the k-nearest neighbors algorithm — impute.knn","text":"Apply imputation data k-nearest neighbors algorithm (Troyanskaya et al. 2001) .","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/impute.knn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Imputation by the k-nearest neighbors algorithm — impute.knn","text":"","code":"impute.knn(   dataSet,   k = 10,   rowmax = 0.5,   colmax = 0.8,   maxp = 1500,   seed = 362436069 )"},{"path":"https://uconn-scs.github.io/metastat/reference/impute.knn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Imputation by the k-nearest neighbors algorithm — impute.knn","text":"dataSet data frame containing data signals. k integer (default = 10) indicating number neighbors used imputation. rowmax scalar (default = 0.5) specifying maximum percent missing data allowed row. rows rowmax*100% missing imputed using overall mean per sample. colmax scalar (default = 0.8) specifying maximum percent missing data allowed column. column colmax*100% missing data, program halts reports error. maxp integer (default = 1500) indicating largest block compounds imputed using k-nearest neighbors algorithm. Larger blocks divided two-means clustering (recursively) prior imputation. seed integer (default = 362436069) specifying seed used random number generator reproducibility.","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/impute.knn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Imputation by the k-nearest neighbors algorithm — impute.knn","text":"imputed data.","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/impute.knn.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Imputation by the k-nearest neighbors algorithm — impute.knn","text":"Troyanskaya O, Cantor M, Sherlock G, Brown P, Hastie T, Tibshirani R, Botstein D, Altman RB (2001). “Missing Value Estimation Methods DNA Microarrays.” Bioinformatics, 17(6), 520–525. doi:10.1093/bioinformatics/17.6.520 .","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/impute.knn_seq.html","id":null,"dir":"Reference","previous_headings":"","what":"Imputation by the k-nearest neighbors algorithm — impute.knn_seq","title":"Imputation by the k-nearest neighbors algorithm — impute.knn_seq","text":"Apply imputation data sequential k-nearest neighbors algorithm (Kim et al. 2004) .","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/impute.knn_seq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Imputation by the k-nearest neighbors algorithm — impute.knn_seq","text":"","code":"impute.knn_seq(dataSet, k = 10)"},{"path":"https://uconn-scs.github.io/metastat/reference/impute.knn_seq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Imputation by the k-nearest neighbors algorithm — impute.knn_seq","text":"dataSet data frame containing data signals. k integer (default = 10) indicating number neighbors used imputation.","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/impute.knn_seq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Imputation by the k-nearest neighbors algorithm — impute.knn_seq","text":"imputed data.","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/impute.knn_seq.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Imputation by the k-nearest neighbors algorithm — impute.knn_seq","text":"Kim K, Kim B, Yi G (2004). “Reuse Imputed Data Microarray Analysis Increases Imputation Efficiency.” BMC bioinformatics, 5, 160. doi:10.1186/1471-2105-5-160 .","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/impute.knn_trunc.html","id":null,"dir":"Reference","previous_headings":"","what":"Imputation by the truncated k-nearest neighbors algorithm — impute.knn_trunc","title":"Imputation by the truncated k-nearest neighbors algorithm — impute.knn_trunc","text":"Apply imputation data truncated k-nearest neighbors algorithm (Shah et al. 2017) .","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/impute.knn_trunc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Imputation by the truncated k-nearest neighbors algorithm — impute.knn_trunc","text":"","code":"impute.knn_trunc(dataSet, k = 10)"},{"path":"https://uconn-scs.github.io/metastat/reference/impute.knn_trunc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Imputation by the truncated k-nearest neighbors algorithm — impute.knn_trunc","text":"dataSet data frame containing data signals. k integer (default = 10) indicating number neighbors used imputation.","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/impute.knn_trunc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Imputation by the truncated k-nearest neighbors algorithm — impute.knn_trunc","text":"imputed data.","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/impute.knn_trunc.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Imputation by the truncated k-nearest neighbors algorithm — impute.knn_trunc","text":"Shah JS, Rai SN, DeFilippis AP, Hill BG, Bhatnagar , Brock GN (2017). “Distribution Based Nearest Neighbor Imputation Truncated High Dimensional Data Applications Pre-Clinical Clinical Metabolomics Studies.” BMC bioinformatics, 18, 114. doi:10.1186/s12859-017-1547-6 .","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/impute.mice_cart.html","id":null,"dir":"Reference","previous_headings":"","what":"Imputation by classification and regression trees — impute.mice_cart","title":"Imputation by classification and regression trees — impute.mice_cart","text":"Apply imputation data classification regression trees (Breiman et al. 1984; Doove et al. 2014; van Buuren 2018) .","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/impute.mice_cart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Imputation by classification and regression trees — impute.mice_cart","text":"","code":"impute.mice_cart(dataSet, m = 5, seed = 362436069)"},{"path":"https://uconn-scs.github.io/metastat/reference/impute.mice_cart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Imputation by classification and regression trees — impute.mice_cart","text":"dataSet data frame containing data signals. m integer (default = 5) specifying number multiple imputations. seed integer (default = 362436069) specifying seed used random number generator reproducibility.","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/impute.mice_cart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Imputation by classification and regression trees — impute.mice_cart","text":"imputed data.","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/impute.mice_cart.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Imputation by classification and regression trees — impute.mice_cart","text":"Breiman L, Friedman J, Olshen RA, Stone CJ (1984). Classification Regression Trees. Routledge, New York, NY, USA. ISBN 9780412048418. Doove LL, van Buuren S, Dusseldorp E (2014). “Recursive Partitioning Missing Data Imputation Presence Interaction Effects.” Computational Statistics & Data Analysis, 72, 92–104. doi:10.1016/j.csda.2013.10.025 . van Buuren S (2018). Flexible Imputation Missing Data. Chapman \\& Hall/CRC, New York, NY, USA. ISBN 9781032178639.","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/impute.mice_norm.html","id":null,"dir":"Reference","previous_headings":"","what":"Imputation by Bayesian linear regression — impute.mice_norm","title":"Imputation by Bayesian linear regression — impute.mice_norm","text":"Apply imputation data Bayesian linear regression (Rubin 1987; Schafer 1997; van Buuren Groothuis-Oudshoorn 2011) .","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/impute.mice_norm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Imputation by Bayesian linear regression — impute.mice_norm","text":"","code":"impute.mice_norm(dataSet, m = 5, seed = 362436069)"},{"path":"https://uconn-scs.github.io/metastat/reference/impute.mice_norm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Imputation by Bayesian linear regression — impute.mice_norm","text":"dataSet data frame containing data signals. m integer (default = 5) specifying number multiple imputations. seed integer (default = 362436069) specifying seed used random number generator reproducibility.","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/impute.mice_norm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Imputation by Bayesian linear regression — impute.mice_norm","text":"imputed data.","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/impute.mice_norm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Imputation by Bayesian linear regression — impute.mice_norm","text":"Rubin DB (1987). Multiple Imputation Nonresponse Surveys. John Wiley \\& Sons, New York, NY, USA. ISBN 9780471087052. Schafer JL (1997). Analysis Incomplete Multivariate Data. Chapman \\& Hall/CRC, New York, NY, USA. ISBN 9780412040610. van Buuren S, Groothuis-Oudshoorn K (2011). “mice: Multivariate Imputation Chained Equations R.” Journal Statistical Software, 45(3), 1–67. doi:10.18637/jss.v045.i03 .","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/impute.min_global.html","id":null,"dir":"Reference","previous_headings":"","what":"Imputation by the global minimum — impute.min_global","title":"Imputation by the global minimum — impute.min_global","text":"Apply imputation data minimum measured value compound found within entire data.","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/impute.min_global.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Imputation by the global minimum — impute.min_global","text":"","code":"impute.min_global(dataSet)"},{"path":"https://uconn-scs.github.io/metastat/reference/impute.min_global.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Imputation by the global minimum — impute.min_global","text":"dataSet data frame containing data signals.","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/impute.min_global.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Imputation by the global minimum — impute.min_global","text":"imputed data.","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/impute.min_local.html","id":null,"dir":"Reference","previous_headings":"","what":"Imputation by the local minimum — impute.min_local","title":"Imputation by the local minimum — impute.min_local","text":"Apply imputation data minimum measured value compound condition.","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/impute.min_local.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Imputation by the local minimum — impute.min_local","text":"","code":"impute.min_local(dataSet, reqPercentPresent = 0.51)"},{"path":"https://uconn-scs.github.io/metastat/reference/impute.min_local.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Imputation by the local minimum — impute.min_local","text":"dataSet data frame containing data signals. reqPercentPresent scalar (default = 0.51) specifying required percent values must present given compound condition combination values imputed.","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/impute.min_local.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Imputation by the local minimum — impute.min_local","text":"imputed data.","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/impute.nuc_norm.html","id":null,"dir":"Reference","previous_headings":"","what":"Imputation by the nuclear-norm regularization — impute.nuc_norm","title":"Imputation by the nuclear-norm regularization — impute.nuc_norm","text":"Apply imputation data nuclear-norm regularization (Hastie et al. 2015) .","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/impute.nuc_norm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Imputation by the nuclear-norm regularization — impute.nuc_norm","text":"","code":"impute.nuc_norm(   dataSet,   rank.max = NULL,   lambda = NULL,   thresh = 1e-05,   maxit = 100,   final.svd = TRUE,   seed = 362436069 )"},{"path":"https://uconn-scs.github.io/metastat/reference/impute.nuc_norm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Imputation by the nuclear-norm regularization — impute.nuc_norm","text":"dataSet data frame containing data signals. rank.max integer specifying restriction rank solution. default set one less minimum dimension dataset. lambda scalar specifying nuclear-norm regularization parameter. lambda = 0, algorithm convergence typically slower. default set maximum singular value obtained singular value decomposition (SVD) dataset. thresh scalar (default = 1e-5) specifying convergence threshold, measured relative change Frobenius norm two successive estimates. maxit integer (default = 100) specifying maximum number iterations convergence reached. final.svd boolean (default = TRUE) specifying whether perform one-step unregularized iteration final iteration, followed soft-thresholding singular values, resulting hard zeros. seed integer (default = 362436069) specifying seed used random number generator reproducibility.","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/impute.nuc_norm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Imputation by the nuclear-norm regularization — impute.nuc_norm","text":"imputed data.","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/impute.nuc_norm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Imputation by the nuclear-norm regularization — impute.nuc_norm","text":"Hastie T, Mazumder R, Lee JD, Zadeh R (2015). “Matrix Completion Low-Rank SVD via Fast Alternating Least Squares.” Journal Machine Learning Research, 16(104), 3367—3402. http://jmlr.org/papers/v16/hastie15a.html.","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/impute.pca_bayes.html","id":null,"dir":"Reference","previous_headings":"","what":"Imputation by Bayesian principal components analysis — impute.pca_bayes","title":"Imputation by Bayesian principal components analysis — impute.pca_bayes","text":"Apply imputation data Bayesian principal components analysis (Oba et al. 2003) .","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/impute.pca_bayes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Imputation by Bayesian principal components analysis — impute.pca_bayes","text":"","code":"impute.pca_bayes(dataSet, nPcs = NULL, maxSteps = 100)"},{"path":"https://uconn-scs.github.io/metastat/reference/impute.pca_bayes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Imputation by Bayesian principal components analysis — impute.pca_bayes","text":"dataSet data frame containing data signals. nPcs integer specifying number principal components calculate. default set minimum number samples number proteins. maxSteps integer (default = 100) specifying maximum number estimation steps.","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/impute.pca_bayes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Imputation by Bayesian principal components analysis — impute.pca_bayes","text":"imputed data.","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/impute.pca_bayes.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Imputation by Bayesian principal components analysis — impute.pca_bayes","text":"Oba S, Sato M, Takemasa , Monden M, Matsubara K, Ishii S (2003). “Bayesian Missing Value Estimation Method Gene Expression Profile Data.” Bioinformatics, 19(16), 2088–2096. doi:10.1093/bioinformatics/btg287 .","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/impute.pca_prob.html","id":null,"dir":"Reference","previous_headings":"","what":"Imputation by probabilistic principal components analysis — impute.pca_prob","title":"Imputation by probabilistic principal components analysis — impute.pca_prob","text":"Apply imputation data probabilistic principal components analysis (Stacklies et al. 2007) .","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/impute.pca_prob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Imputation by probabilistic principal components analysis — impute.pca_prob","text":"","code":"impute.pca_prob(dataSet, nPcs = NULL, maxIterations = 1000, seed = 362436069)"},{"path":"https://uconn-scs.github.io/metastat/reference/impute.pca_prob.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Imputation by probabilistic principal components analysis — impute.pca_prob","text":"dataSet data frame containing data signals. nPcs integer specifying number principal components calculate. default set minimum number samples number proteins. maxIterations integer (default = 1000) specifying maximum number allowed iterations. seed integer (default = 362436069) specifying seed used random number generator reproducibility.","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/impute.pca_prob.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Imputation by probabilistic principal components analysis — impute.pca_prob","text":"imputed data.","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/impute.pca_prob.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Imputation by probabilistic principal components analysis — impute.pca_prob","text":"Stacklies W, Redestig H, Scholz M, Walther D, Selbig J (2007). “pcaMethods–Bioconductor Package Providing PCA Methods Incomplete Data.” Bioinformatics, 23(9), 1164–1167. doi:10.1093/bioinformatics/btm069 .","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/ma.html","id":null,"dir":"Reference","previous_headings":"","what":"The input for MA plot — ma","title":"The input for MA plot — ma","text":"Calculate input generating MA plot.","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/ma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The input for MA plot — ma","text":"","code":"ma(dataSet, condCol = \"merged_condition\", cond)"},{"path":"https://uconn-scs.github.io/metastat/reference/ma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The input for MA plot — ma","text":"dataSet data frame containing data signals. condCol string (default = \"merged_condition\") specifying column name dataSet contains conditions compared. cond string specifying two conditions compare. order important, second condition serves reference comparison. two conditions condCol dataSet argument specified, cond automatically selected sorting unique values alphabetically ascending order.","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/ma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The input for MA plot — ma","text":"data frame containing compound-wise averages within condition.","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/ma.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The input for MA plot — ma","text":"second condition serves reference comparison. rows ordered cond. Specifically, first row corresponds compound-wise average first condition, second row corresponds second condition.","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/mod_t_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Moderated t-test — mod_t_test","title":"Moderated t-test — mod_t_test","text":"Apply moderated t-test (Smyth 2004)  data.","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/mod_t_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Moderated t-test — mod_t_test","text":"","code":"mod_t_test(dataSet, condCol = \"merged_condition\", cond)"},{"path":"https://uconn-scs.github.io/metastat/reference/mod_t_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Moderated t-test — mod_t_test","text":"dataSet data frame containing data signals. condCol string (default = \"merged_condition\") specifying column name dataSet contains conditions compared. cond string specifying two conditions compare. order important, second condition serves reference comparison. two conditions condCol dataSet argument specified, cond automatically selected sorting unique values alphabetically ascending order.","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/mod_t_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Moderated t-test — mod_t_test","text":"data frame containing differences means p-values compound two conditions.","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/mod_t_test.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Moderated t-test — mod_t_test","text":"second condition serves reference comparison. differences calculated subtracting mean second condition mean first condition (Condition 1 - Condition 2).","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/mod_t_test.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Moderated t-test — mod_t_test","text":"Smyth GK (2004). “Linear Models Empirical Bayes Methods Assessing Differential Expression Microarray Experiments.” Statistical Applications Genetics Molecular Biology, 3(1). doi:10.2202/1544-6115.1027 .","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/normalize.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalization — normalize","title":"Normalization — normalize","text":"Apply specified type normalization data.","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/normalize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalization — normalize","text":"","code":"normalize(dataSet, method = \"quantile\")"},{"path":"https://uconn-scs.github.io/metastat/reference/normalize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalization — normalize","text":"dataSet data frame containing data signals. method string (default = \"quant\") specifying method normalization apply: Row-wise (sample-wise) normalization: \"mean\": Samples normalized mean value variables given sample. \"median\": samples normalized median value variables given sample. \"quantile\": Quantile normalization. Column-wise (metabolite-wise) normalization: \"meanCtr\": Mean centering. \"medianCtr\": Median centering. \"auto\": Auto scaling. \"level\": Level scaling. \"pareto\": Pareto scaling. \"range\": Range scaling. \"vast\": Vast scaling.","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/normalize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalization — normalize","text":"normalized data.","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/normalize.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Normalization — normalize","text":"Quantile normalization generally recommended. Mean median normalization going included popular previous methods. normalization recommended. Boxplots also generated normalization give visual indicator changes.","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/preprocess.html","id":null,"dir":"Reference","previous_headings":"","what":"Loading and reformatting of metabolomics data — preprocess","title":"Loading and reformatting of metabolomics data — preprocess","text":"Read data file, select columns necessary analysis, return reformatted data.","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/preprocess.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Loading and reformatting of metabolomics data — preprocess","text":"","code":"preprocess(   fileName,   dataSet = NULL,   attrnames = c(\"gender\", \"treatment\", \"replicate\"),   zeroNA = TRUE )"},{"path":"https://uconn-scs.github.io/metastat/reference/preprocess.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Loading and reformatting of metabolomics data — preprocess","text":"fileName name .csv file containing metabolomics data (including path file, needed). dataSet raw data set, already loaded R. attrnames vector strings (default = c(\"gender\", \"treatment\", \"replicate\")) specifying names attribute columns. zeroNA boolean (default = TRUE) specifying whether 0's converted NA's.","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/preprocess.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Loading and reformatting of metabolomics data — preprocess","text":"2d dataframe.","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/preprocess.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Loading and reformatting of metabolomics data — preprocess","text":"function executes following: Reads file. Provides summary statistics histogram values reported data set. Re-formats data present individual compounds columns. Stores data data.frame prints levels attributes user.","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/preprocessing.html","id":null,"dir":"Reference","previous_headings":"","what":"Loading and reformatting of metabolomics data — preprocessing","title":"Loading and reformatting of metabolomics data — preprocessing","text":"Read data file, select columns necessary analysis, return reformatted data.","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/preprocessing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Loading and reformatting of metabolomics data — preprocessing","text":"","code":"preprocessing(   fileName,   dataSet = NULL,   names = c(\"gender\", \"treatment\", \"replicate\") )"},{"path":"https://uconn-scs.github.io/metastat/reference/preprocessing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Loading and reformatting of metabolomics data — preprocessing","text":"fileName name .csv file containing metabolomics data (including path file, needed). dataSet raw data set, already loaded R. names vector strings (default = c(\"gender\", \"treatment\", \"replicate\")) specifying names attribute columns.","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/preprocessing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Loading and reformatting of metabolomics data — preprocessing","text":"2d dataframe.","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/preprocessing.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Loading and reformatting of metabolomics data — preprocessing","text":"function executes following: Reads file. Provides summary statistics histogram values reported data set. Re-formats data present individual compounds columns. Stores data data.frame prints levels attributes user.","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/scale.html","id":null,"dir":"Reference","previous_headings":"","what":"Centering and/or scaling — scale","title":"Centering and/or scaling — scale","text":"Apply centering /scaling data.","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/scale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Centering and/or scaling — scale","text":"","code":"scale(   dataSet,   names = c(\"gender\", \"treatment\", \"replicate\"),   center = TRUE,   scale = \"auto\",   mu = NULL,   sigma = NULL )"},{"path":"https://uconn-scs.github.io/metastat/reference/scale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Centering and/or scaling — scale","text":"dataSet data frame containing data signals. names vector strings (default = c(\"gender\", \"treatment\", \"replicate\")) specifying names attribute columns. center boolean (default = TRUE) specifying whether apply centering. scale string (default = \"auto\") specifying method scaling apply: \"none\" scaling applied. \"auto\": Auto scaling. \"level\": Level scaling. \"pareto\": Pareto scaling. \"range\": Range scaling. \"vast\": Vast scaling. mu numeric vector specifying centering reference. default centering reference set mean value. sigma numeric vector specifying scaling reference based corresponding definition. default scaling reference set standard deviation center = TRUE adjusted root mean square center = FALSE.","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/scale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Centering and/or scaling — scale","text":"centered /scaled data.","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/scale.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Centering and/or scaling — scale","text":"function executes following: Plots mean-variance relationship. Centers /scales data. Plots mean-variance relationship comparison.","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/t_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Student's t-test — t_test","title":"Student's t-test — t_test","text":"Apply Student's t-test data.","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/t_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Student's t-test — t_test","text":"","code":"t_test(dataSet, condCol = \"merged_condition\", cond)"},{"path":"https://uconn-scs.github.io/metastat/reference/t_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Student's t-test — t_test","text":"dataSet data frame containing data signals. condCol string (default = \"merged_condition\") specifying column name dataSet contains conditions compared. cond string specifying two conditions compare. order important, second condition serves reference comparison. two conditions condCol dataSet argument specified, cond automatically selected sorting unique values alphabetically ascending order.","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/t_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Student's t-test — t_test","text":"data frame containing differences means p-values compound two conditions.","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/t_test.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Student's t-test — t_test","text":"second condition serves reference comparison. differences calculated subtracting mean second condition mean first condition (Condition 1 - Condition 2).","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/transform.html","id":null,"dir":"Reference","previous_headings":"","what":"Transformation — transform","title":"Transformation — transform","text":"Apply transformation data.","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/transform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transformation — transform","text":"","code":"transform(dataSet, method = \"log\", logFold = 2, root = 2)"},{"path":"https://uconn-scs.github.io/metastat/reference/transform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transformation — transform","text":"dataSet data frame containing data signals. method string (default = \"log\") specifying method used transformation: \"log\": Logarithm transformation. \"root\": Root transformation. logFold integer (default = 2) specifying base log transformation method = \"log\". root integer (default = 2) specifying degree root root transformation method = \"root\". example, set 2 square root 3 cube root.","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/transform.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transformation — transform","text":"transformed data.","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/transform.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Transformation — transform","text":"function executes following: Plots mean-variance relationship. Transforms data. Plots mean-variance relationship comparison.","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/wilcox_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Wilcoxon signed-rank test — wilcox_test","title":"Wilcoxon signed-rank test — wilcox_test","text":"Apply Wilcoxon test data.","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/wilcox_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wilcoxon signed-rank test — wilcox_test","text":"","code":"wilcox_test(dataSet, condCol = \"merged_condition\", cond)"},{"path":"https://uconn-scs.github.io/metastat/reference/wilcox_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wilcoxon signed-rank test — wilcox_test","text":"dataSet data frame containing data signals. condCol string (default = \"merged_condition\") specifying column name dataSet contains conditions compared. cond string specifying two conditions compare. order important, second condition serves reference comparison. two conditions condCol dataSet argument specified, cond automatically selected sorting unique values alphabetically ascending order.","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/wilcox_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wilcoxon signed-rank test — wilcox_test","text":"data frame containing differences means p-values compound two conditions.","code":""},{"path":"https://uconn-scs.github.io/metastat/reference/wilcox_test.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Wilcoxon signed-rank test — wilcox_test","text":"second condition serves reference comparison. differences calculated subtracting mean second condition mean first condition (Condition 1 - Condition 2).","code":""}]
